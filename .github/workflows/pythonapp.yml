name: Python application

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --prune --unshallow

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pip install pytest
          export PYTHONPATH=src
          pytest
          echo "Test done"

      - name: Run script and set environment variable
        run: |
          output_directory="exported_data"
          output_json_file="$output_directory/exported_data.json"

          # Create the output directory if it doesn't exist
          mkdir -p $output_directory

          # Run your Python script and save the JSON file
          python .github/workflows/example.py
          echo "EXPORTED_DATA_FILE=$output_json_file" >> $GITHUB_ENV
        shell: bash

      - name: Upload JSON file as artifact
        run: echo "::set-output name=exported_data_file::$GITHUB_ENV"
        id: set_output

      - name: Upload JSON file as artifact
        uses: actions/upload-artifact@v2
        with:
          name: exported_data
          path: ${{ steps.set_output.outputs.exported_data_file }}
